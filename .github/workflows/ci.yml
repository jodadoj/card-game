name: Build cache

on:
  [ push ]

env:
  node_version: "16.x"

jobs:
  build-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.node_version }}
        cache: yarn
    - name: Install JS dependencies
      run: yarn install --prefer-offline --frozen-lockfile
      
  format-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install --frozen-lockfile
    - name: Format
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn format
    - name: Lint
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn lint
    - name: Test deck functions
      if: steps.yarn-cache.outputs.cache-hit != 'true'
      run: yarn vitest run deck
